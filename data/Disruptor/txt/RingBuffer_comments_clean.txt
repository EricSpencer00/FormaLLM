**************************************************************************)
Models a RingBuffer where each slot can contain an element from         *)
Values. Initially all slots contains NULL.                              *)
*)
Read and write accesses to each slot are tracked to detect data races.  *)
This entails that each write and read of a slot has multiple steps.     *)
*)
All models using the RingBuffer should assert the NoDataRaces invariant *)
that checks against data races between multiple producer threads and    *)
consumer threads.                                                       *)
**************************************************************************)
The number of slots in the RingBuffer.                *)
The set of readers to the RingBuffer.                 *)
The set of writers to the RingBuffer.                 *)
The set of values storable in the RingBuffer's slots. *)
Last index in the RingBuffer. *)
**************************************************************************)
Clients using the RingBuffer must ensure there are no data races.       *)
I.e. NoDataRaces must be an invariant in the spec using the Ringbuffer. *)
**************************************************************************)
Initial state of RingBuffer. *)
The index into the Ring Buffer for a sequence number.*)
**************************************************************************)
Write operations.                                                       *)
**************************************************************************)
**************************************************************************)
Read operations.                                                       *)
**************************************************************************)
**************************************************************************)
Invariants.                                                             *)
**************************************************************************)