Are we clear of all consumers? (Potentially a full cycle behind).
Track what we read from the ringbuffer.
**************************************************************************)
Models a Single Producer, Multi Consumer Disruptor (SPMC).              *)
*)
The producer publishes the sequence number as value into the ring       *)
buffer and the model verifies that all consumers read all published     *)
values.                                                                 *)
*)
The model also verifies that no data races occur between the producer   *)
and consumers and that all consumers eventually read all published      *)
values (in a Multicast fashion - i.e. all consumers read all events).   *)
*)
To see a data race, try and run the model with two producers.           *)
**************************************************************************)
Max number of published events. Bounds the model. *)
Writer/producer thread ids.                       *)
Reader/consumer thread ids.                       *)
Ringbuffer size.                                  *)
Write cursor. One for the producer.               *)
Read cursors. One per consumer.                   *)
Program Counter of each Writer/Reader.            *)
Sequence of all read events by the Readers.       *)
This is a history variable used for liveliness    *)
checking.                                         *)
**************************************************************************)
Each producer/consumer can be in one of two states:                     *)
1. Accessing a slot in the Disruptor or                                 *)
2. Advancing to the next slot.                                          *)
**************************************************************************)
**************************************************************************)
Producer Actions:                                                       *)
**************************************************************************)
**************************************************************************)
Consumer Actions:                                                       *)
**************************************************************************)
**************************************************************************)
Spec:                                                                   *)
**************************************************************************)
**************************************************************************)
State constraint - bounds model:                                        *)
**************************************************************************)
**************************************************************************)
Invariants:                                                             *)
**************************************************************************)
**************************************************************************)
Properties:                                                             *)
**************************************************************************)
Eventually always, consumers must have read all published values.       *)