\* Modification History
\* Last modified Thu May 08 12:29:46 CEST 2014 by merz
\* Last modified Tue Oct 15 12:06:48 CEST 2013 by shaolin
\* Last modified Sat Nov 26 08:49:59 CET 2011 by merz
\* Last modified Mon Nov 07 08:58:05 PST 2011 by lamport
\* Created Mon Oct 31 02:52:05 PDT 2011 by lamport
(***************************************************************************)
(* This module contains useful theorems for inductive proofs and recursive *)
(* definitions over the naturals.                                          *)
(*                                                                         *)
(* Some of the statements of the theorems are decomposed in terms of       *)
(* definitions.  This is done for two reasons:                             *)
(*                                                                         *)
(*  - It makes it easier for the backends to instantiate the theorems      *)
(*    when those definitions are not expanded.                             *)
(*                                                                         *)
(*  - It can be convenient when writing proofs to use those definitions    *)
(*    rather than having to write out their expansions.                    *)
(*                                                                         *)
(* The proofs of these theorems appear in module NaturalsInduction\_proofs.*)
(***************************************************************************)
(***************************************************************************)
(* The following is the simple statement of inductions over the naturals.  *)
(* For predicates P defined by a moderately complex operator, it is often  *)
(* useful to hide the operator definition before using this theorem. That  *)
(* is, you first define a suitable operator P (not necessarily by that     *)
(* name), prove the two hypotheses of the theorem, and then hide the       *)
(* definition of P when using the theorem.                                 *)
(***************************************************************************)
(***************************************************************************)
(* A useful corollary of NatInduction                                      *)
(***************************************************************************)
(***************************************************************************)
(* The following theorem expresses a stronger induction principle,         *)
(* also known as course-of-values induction, where the induction           *)
(* hypothesis is available for all strictly smaller natural numbers.       *)
(***************************************************************************)
(***************************************************************************)
(* The following theorem expresses the ``least-number principle'':         *)
(* if P(n) is true for some natural number n then there is a               *)
(* smallest natural number for which P is true. It could be derived in     *)
(* module WellFoundedInduction as a corollary of the fact that the natural *)
(* numbers are well ordered, but we give a direct proof.                   *)
(***************************************************************************)
(***************************************************************************)
(* The following theorem says that a recursively defined function f over   *)
(* the natural numbers is well-defined if for every n \in Nat the          *)
(* definition of f[n] depends only on arguments smaller than n.            *)
(***************************************************************************)
(***************************************************************************)
(* The following theorem NatInductiveDef is what you use to justify a      *)
(* function defined by primitive recursion over the naturals.              *)
(***************************************************************************)
(***************************************************************************)
(* The following two theorems allow you to prove the type of a recursively *)
(* defined function over the natural numbers.                              *)
(***************************************************************************)
(***************************************************************************)
(* The following theorems show uniqueness of functions recursively defined *)
(* over Nat.                                                               *)
(***************************************************************************)
(***************************************************************************)
(* The following theorems are analogous to the preceding ones but for      *)
(* functions defined over intervals of natural numbers.                    *)
(***************************************************************************)
(***************************************************************************)
(* The following theorems are analogous to the preceding ones but for      *)
(* functions defined over intervals of natural numbers.                    *)
(***************************************************************************)
(***************************************************************************)
(* The following example shows how this module is used.                    *)
(***************************************************************************)
