**************************************************************************)
This module contains a library of theorems about sequences and the      *)
corresponding operations.                                               *)
**************************************************************************)
**************************************************************************)
Elementary properties about Seq(S)                                      *)
**************************************************************************)
Concatenation (\o) And Properties
***************************************************************************)
**************************************************************************)
SubSeq, Head and Tail                               *)
**************************************************************************)
****************************************************************************)
Adjacent subsequences can be concatenated to obtain a longer subsequence. *)
****************************************************************************)
**************************************************************************)
Append, InsertAt, Cons & RemoveAt                       *)
Append(seq, elt) appends element elt at the end of sequence seq         *)
Cons(elt, seq) prepends element elt at the beginning of sequence seq    *)
InsertAt(seq, i, elt) inserts element elt in the position i and pushes  *)
the                                                                     *)
original element at i to i+1 and so on           *)
RemoveAt(seq, i) removes the element at position i                      *)
**************************************************************************)
**************************************************************************)
Front & Last                                                 *)
*)
Front(seq)   sequence formed by removing the last element              *)
Last(seq)    last element of the sequence                              *)
*)
These operators are to Append what Head and Tail are to Cons.          *)
**************************************************************************)
**************************************************************************)
As a corollary of the previous theorems it follows that a sequence is   *)
either empty or can be obtained by appending an element to a sequence.  *)
**************************************************************************)
**************************************************************************)
REVERSE SEQUENCE And Properties                       *)
Reverse(seq) --> Reverses the sequence seq                           *)
**************************************************************************)
**************************************************************************)
Induction principles for sequences                                      *)
**************************************************************************)
**************************************************************************)
RANGE OF SEQUENCE                              *)
**************************************************************************)
The range of the reverse sequence equals that of the original one. *)
Range of concatenation of sequences is the union of the ranges *)
**************************************************************************)
Prefixes and suffixes of sequences.                                     *)
**************************************************************************)
**************************************************************************)
The following theorem gives three alternative characterizations of      *)
prefixes. It also implies that any prefix of a sequence t is at most    *)
as long as t.                                                           *)
**************************************************************************)
**************************************************************************)
(Strict) prefixes on sequences form a (strict) partial order, and       *)
the strict ordering is well-founded.                                    *)
**************************************************************************)
**************************************************************************)
Similar theorems about suffixes.                                        *)
**************************************************************************)
**************************************************************************)
Since the (strict) prefix and suffix orderings on sequences are         *)
well-founded, they can be used for defining recursive functions.        *)
The operators OpDefinesFcn, WFInductiveDefines, and WFInductiveUnique   *)
are defined in module WellFoundedInduction.                             *)
**************************************************************************)
**************************************************************************)
The following theorems justify ``primitive recursive'' functions over   *)
sequences, with a base case for the empty sequence and recursion along  *)
either the Tail or the Front of a non-empty sequence.                   *)
**************************************************************************)