Increasing refX moves the arrowhead to the middle of the line away from the tip.
NodeDimension ought to be divisible by 2 for proper alignment of nodes and edges.
round (rx=15) if node is active.
A solid, black line with an arrow at its tip denotes an edge.
%%03d to escape %03d in Java format strings.
active |-> active,
sentUnacked |-> sentUnacked,
rcvdUnacked |-> rcvdUnacked,
msgs |-> msgs,
acks |-> acks
The animator nests frame in an SVG box.  With a file, this is done explicitly.
A counter-example that is a violation of this property is a prefix of a behavior of at least
30 states with the Leader neutral in the final state.
Disable Idle steps that leave the variables unchange (an idle process becoming idle)
to prevent finite stuttering when simulating.
Processes.
A randomly generate network of processes.
NodesOfNetwork ==
{L, P1, P2, P3, P4, P5}
Network ==
LET Edgs == SUBSET { n \in (NodesOfNetwork \X NodesOfNetwork):
\* No self-loops.
/\ n[1] # n[2]
\* L is a source and never a sink.
/\ n[2] # L }
IN TLCEval(RandomElement(Edgs))
\* Print the randomly chosen set of edges.
ASSUME PrintT(<<"Edges", Edges>>)
A specific network of processes.
Modification History
Last modified Tue Dec 21 17:52:54 PST 2021 by Markus Kuppe
Created Tue Dec 02 17:23:43 PDT 2021 by Markus Kuppe
Concatenates the given string str n times. The empty string is *)
returned if n is less than 1. *)
"m", 0 -> ""  *)
"m", 1 -> "m"  *)
"m", 2 -> "mm"  *)
"m", 3 -> "mmm"  *)
... *)
Defines an arrow with plain SVG that is referenced in the def of E below. *)
Legend with four rows of labels (text) whose top-left point is located at BasePos:
1: The current state ordinal.
2: The action from the predecessor state to the current state.
3: The action from the current state to the next/successor state.
4: "~neutral procs red, round when also active".
The name of the action concatenated with the action's context. *)
A function from processes to x,y coordinates: [ Procs -> [x: Nat, y: Nat] *)
The coordinates are chosen according to the given layout algorithm parameterized *)
by the given "options" record. *)
An SVG group containing rectangles denoting the graph of processes. Approximately at *)
the center of each node, a text indicates the processes name (Procs). *)
A black square denotes an idle process, a red circle an active one. *)
An SVG group containing lines denoting the (graph) edges. An line, *)
connecting a from and to node, is annotated with three labels: *)
1: At the mid-point of the line, a string indicates the in-flight messages and ACKs, *)
or the empty string if there are no messages in flight. An in-flight message is   *)
denoted by an "m" and an ACK by an "a", respectively. *)
2: At the quad-point towards the source of the edge, a negative integer denotes the  *)
number of unacknowledged messages. If there are zero unacknowledged messages, the *)
integer made invisible to reduce visual clutter. *)
3: At the quad-point towards the sink of the edge, a natural denotes the number of *)
ACKs that the sink still has to sent. Again, if there are zero ACKs to be sent  *)
the natural is invisible. *)
An SVG group containing the lines visualizing the upEdges of the overlay tree. *)
An upEdge is denoted by a dashed, orange line. *)
Combine the (SVG) definitions, legend, processes, edges, and upEdges into a single *)
(SVG) frame as a visualization of the current TLA+ state. *)
Writes the given string str to a file whose name contains the number n. *)
https://animator.tlapl.us (interactively explore the animation) *)
The resulting set of EWD687a_anim_???.svg files can be rendered as an animated gif with:    *)
$ convert -delay 100 -density 200 *.svg EWD687a.gif *)
An animated gif is portable across browser, but cannot be advanced/reversed manually,       *)
unless a user installs a browser plugin such as https://github.com/0ui/gif-scrubber.        *)