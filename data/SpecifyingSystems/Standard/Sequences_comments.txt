(***************************************************************************)
(* Defines operators on finite sequences, where a sequence of length n is  *)
(* represented as a function whose domain is the set 1..n (the set         *)
(* {1, 2, ... , n}).  This is also how TLA+ defines an n-tuple, so         *)
(* tuples are sequences.                                                   *)
(***************************************************************************)
(*************************************************************************)
(* Imports the definitions from Naturals, but don't export them.         *)
(*************************************************************************)
(*************************************************************************)
(* The set of all sequences of elements in S.                            *)
(*************************************************************************)
(*************************************************************************)
(* The length of sequence s.                                             *)
(*************************************************************************)
(*************************************************************************)
(* The sequence obtained by concatenating sequences s and t.             *)
(*************************************************************************)
(**************************************************************************)
(* The sequence obtained by appending element e to the end of sequence s. *)
(**************************************************************************)
(*************************************************************************)
(* The usual head (first) and tail (rest) operators.                     *)
(*************************************************************************)
(*************************************************************************)
(* The sequence <<s[m], s[m+1], ... , s[n]>>.                            *)
(*************************************************************************)
(*************************************************************************)
(* The subsequence of s consisting of all elements s[i] such that        *)
(* Test(s[i]) is true.                                                   *)
(*************************************************************************)
(*******************************************************************)
(* F[i] equals SelectSeq(SubSeq(s, 1, i), Test]                    *)
(*******************************************************************)
