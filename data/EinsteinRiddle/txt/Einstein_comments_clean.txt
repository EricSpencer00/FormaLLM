Note that TLC!Permutations has a Java module override and, thus,
would be evaluated faster.  However, TLC!Permutations equals a
set of records whereas Permutation below equals a set of tuples/
sequences.  Also, Permutation expects Cardinality(S) = 5.
@type: Set(Str) => Set(Seq(Str));
In most specs, the following parameterization would be defined as
constants.  Given that Einstein's riddle has only this
parameterization, the constants are replaced with constant-level
operators.  As a side-effect, TLC evaluates them eagerly at startup,
and Apalache successfully determines their types.
@type: Seq(Str);
tuple of nationalities
@type: Seq(Str);
tuple of house colors
@type: Seq(Str);
tuple of pets
@type: Seq(Str);
tuple of cigars
@type: Seq(Str);
tuple of drinks
since the norwegian lives in the first house
Apalache cannot infer the type of `vars' because it could be a sequence or a tuple.
So we explicitely tell Apalache that it is a sequence by adding the following annotation:
@type: Seq(Seq(Str));
To find the solution with the `^Apalache^' model-checker, run:
`^apalache-mc check --init=Init --inv=FindSolution --length=0 --run-dir=./outout Einstein.tla^'
You will then find the solution in `^./output/violation.tla^'.
********************************************************************************)
Literature/Source:                                                            *)
https://udel.edu/~os/riddle.html                                            *)
*)
Situation:                                                                    *)
- There are 5 houses in five different colors.                                *)
- In each house lives a person with a different nationality.                  *)
- These five owners drink a certain type of beverage, smoke a                 *)
certain brand of cigar and keep a certain pet.                              *)
- No owners have the same pet, smoke the same brand of cigar, or              *)
drink the same beverage.                                                    *)
*)
Rules:                                                                        *)
1 the Brit lives in the red house                                            *)
2 the Swede keeps dogs as pets                                               *)
3 the Dane drinks tea                                                        *)
4 the green house is on the left of the white house                          *)
5 the green house's owner drinks coffee                                      *)
6 the person who smokes Pall Mall rears birds                                *)
7 the owner of the yellow house smokes Dunhill                               *)
8 the man living in the center house drinks mylk                             *)
9 the Norwegian lives in the first house                                     *)
10 the man who smokes blends lives next to the one who keeps cats             *)
11 the man who keeps horses lives next to man who smokes Dunhill              *)
12 the owner who smokes BlueMaster drinks beer                                *)
13 the German smokes Prince                                                   *)
14 the Norwegian lives next to the blue house                                 *)
15 the man who smokes blend has a neighbor who drinks water                   *)
*)
Question:                                                                     *)
Who owns the fish?                                                           *)
*)
Note that `^TLC^' takes a very long time to find the solution because it      *)
blindly enumerates all possible combinations of assignments to the variables; *)
in contrast, `^Apalache^' finds the solution easily using an `^SMT^' solver.  *)
Instructions to run `^Apalache^' appear at the end of the file.               *)
********************************************************************************)
********)
Rules *)
********)
***********)
Solution *)
***********)